<Application x:Class="RTDDE.ModelViewer.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  mc:Ignorable="PresentationOptions"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <Color x:Key="DefaultColor" A="255" R="240" G ="240" B="240"/>
        <Color x:Key="HighlightColor" A="255" R="229" G ="229" B="229"/>
        <Color x:Key="PressedColor" A="255" R="215" G ="215" B="215"/>

        <SolidColorBrush x:Key="DefaultBrush" Color="{StaticResource DefaultColor}" PresentationOptions:Freeze="true"/>
        <SolidColorBrush x:Key="HighlightBrush" Color="{StaticResource HighlightColor}" PresentationOptions:Freeze="true"/>
        <SolidColorBrush x:Key="PressedBrush" Color="{StaticResource PressedColor}" PresentationOptions:Freeze="true"/>

        <LinearGradientBrush x:Key="SeparatorBrush" MappingMode="Absolute" PresentationOptions:Freeze="true"
                             SpreadMethod="Repeat"
                             StartPoint="0,0" EndPoint="10,0">
            <LinearGradientBrush.GradientStops>
                <GradientStop Color="Transparent" Offset="0.25"/>
                <GradientStop Color="{StaticResource DefaultColor}" Offset="0.25"/>
                <GradientStop Color="{StaticResource DefaultColor}" Offset="0.75"/>
                <GradientStop Color="Transparent" Offset="0.75"/>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>

        <Style TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="Padding" Value="0,1,0,1"></Setter>
        </Style>
        <Style TargetType="DataGrid">
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="RowHeaderWidth" Value="0"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="SelectionUnit" Value="FullRow"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="EnableRowVirtualization" Value="True"/>
            <Setter Property="VerticalGridLinesBrush" Value="Transparent"></Setter>
            <Setter Property="HorizontalGridLinesBrush" Value="Transparent"></Setter>
            <Setter Property="AlternatingRowBackground" Value="{StaticResource DefaultBrush}"></Setter>
            <Setter Property="GridLinesVisibility" Value="None"></Setter>
        </Style>
        <Style TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="{StaticResource PressedBrush}" />
            <Setter Property="Padding" Value="3"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
        <Style TargetType="DataGridCell">
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="2"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Foreground" Value="Black" />
                    <Setter Property="Background" Value="{StaticResource PressedBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="WrapPanel">
            <Setter Property="Orientation" Value="Horizontal"/>
            <Setter Property="Margin" Value="0"/>
        </Style>
        <Style TargetType="ToggleButton">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Foreground" Value="{StaticResource PressedBrush}" />
            <Setter Property="Background" Value="{StaticResource DefaultBrush}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Background="{TemplateBinding Background}"
                    Padding="{TemplateBinding Padding}"
                    CornerRadius="0">
                            <ContentControl Content="{TemplateBinding Content}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="Black" />
                    <Setter Property="Background" Value="{StaticResource HighlightBrush}" />
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Foreground" Value="Black" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Foreground" Value="Black" />
                    <Setter Property="Background" Value="{StaticResource PressedBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="ToggleButton" x:Key="MenuStyle" BasedOn="{StaticResource {x:Type ToggleButton}}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Padding" Value="10,0,10,0"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="Black" />
                    <Setter Property="Background" Value="Transparent" />
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Foreground" Value="Black" />
                    <Setter Property="Background" Value="Transparent" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Foreground" Value="Black" />
                    <Setter Property="Background" Value="Transparent" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="RadioButton"/>
        <Style TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Background" Value="{StaticResource DefaultBrush}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Background="{TemplateBinding Background}"
                    Padding="{TemplateBinding Padding}"
                    CornerRadius="0">
                            <ContentControl Content="{TemplateBinding Content}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource HighlightBrush}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource PressedBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="Button" x:Key="CloseButton" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="Pink" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Crimson" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="Firebrick" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="IsReadOnly" Value="True"></Setter>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="BorderBrush" Value="{StaticResource DefaultBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBoxBase">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource HighlightBrush}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PressedBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="RichTextBox">
            <Setter Property="IsReadOnly" Value="True"></Setter>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="BorderBrush" Value="{StaticResource HighlightBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBoxBase">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource HighlightBrush}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PressedBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Separator">
            <Setter Property="Background" Value="{StaticResource SeparatorBrush}"/>
        </Style>
        <Style TargetType="ComboBox">
            <Setter Property="DisplayMemberPath" Value="Key"/>
            <Setter Property="SelectedValuePath" Value="Value"/>
            <Setter Property="SelectedIndex" Value="0"/>
        </Style>
        <Style TargetType="GroupBox">
            <Setter Property="BorderThickness" Value="0"></Setter>
        </Style>
        <Style TargetType="Expander">
            <Setter Property="BorderThickness" Value="0"></Setter>
        </Style>
    </Application.Resources>
</Application>
